{"version":3,"file":"static/webpack/static/development/pages/sell.js.52d1248c7ff3fbb118c4.hot-update.js","sources":["webpack:///./components/CreateItem.js","webpack:///./components/ErrorMessage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst CREATE_ITEM_MUTATION = gql`\n   mutation CREATE_ITEM_MUTATION(\n     $title: String!\n     $description: String!\n     $price: Int!\n     $image: String\n     $largeImage: String\n) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n\t) {\n\t\tid\n\t}\n  }\n`;\n\n\nexport class CreateItem extends Component {\n\tstate = {\n\t\ttitle: 'New Nikes',\n\t\tdescription: 'CreateItemollectable',\n\t\timage: 'dog.jpg',\n\t\tlargeImage: 'large-dog.jpg',\n\t\tprice: 0,\n\t};\n\thandleChange = e => {\n\t\tconst { name, type, value } = e.target;\n\t\tconst val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n\t};\n\n\n    render() {\n\t\treturn (\n\t\t\t<Mutation mutation={CREATE_ITEM_MUTATION} variables= \n\t\t\t  {this.state}>\n\t\t\t   {(createItem, { loading, error }) => (\n\n\n\n\t\t\t<Form \n\t\t\t  onSubmit={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconsole.log(this.state);\n\t\t\t}}>\n\t\t\t  <fieldset>\n\t\t\t  <label htmlFor=\"title\">\n\t\t\t    Title\n\t\t\t    <input \n\t\t\t      type=\"text\" \n\t\t\t      id=\"title\" \n\t\t\t      name=\"title\" \n\t\t\t      placeholder=\"Title\" \n\t\t\t      required value= {this.state.title}\n\t\t\t      onChange={this.handleChange} \n\t\t\t    />\n\t\t\t  </label>\n\n\t\t\t  <label htmlFor=\"price\">\n\t\t\t    Price\n\t\t\t    <input \n\t\t\t      type=\"number\" \n\t\t\t      id=\"price\" \n\t\t\t      name=\"price\" \n\t\t\t      placeholder=\"Price\" \n\t\t\t      required value= {this.state.price}\n\t\t\t      onChange={this.handleChange} \n\t\t\t    />\n\t\t\t  </label>\n\n\t\t\t  <label htmlFor=\"description\">\n\t\t\t    Description\n\t\t\t    <textarea\n\t\t\t      id=\"description\" \n\t\t\t      name=\"description\" \n\t\t\t      placeholder=\"Enter a Description\" \n\t\t\t      required value= {this.state.description}\n\t\t\t      onChange={this.handleChange} \n\t\t\t    />\n\t\t\t   </label>\n\t\t\t   <button type=\"submit\">Submit</button>\n\t\t\t  </fieldset>\n\t\t\t</Form>\n\n\t\t\t)}\n\n\t\t\t</Mutation>\n\t\t);\n\t}\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };\n\n","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAqBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAFA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAoDA;AAvEA;AACA;AADA;AAAA;AA0EA;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}